#!/bin/bash

err() {
    echo -e >&2 "$*"
    exit 1
}

usage() {
    err usage: $0 [command [args...]]
}
[[ $# -gt 0 ]] || usage


# Set the docker image
: ${RPI_XC_IMAGE:=stephenthirlwall/rpi-xc}

case $1 in

    update-image)
        docker pull $RPI_XC_IMAGE
        exit
        ;;

    update-script)
        if cmp -s <( docker run $RPI_XC_IMAGE ) $0; then
            echo $0 is up to date
        else
            echo -n Updating $0 '... '
            docker run $RPI_XC_IMAGE > $0 && echo ok
        fi
        exit
        ;;

    update)
        $0 update-image
        $0 update-script
        exit
        ;;

    --)
        # Everything after this is the command-line to be executed
        shift
        ;;

esac

# Choose one of raspbian32, raspbian64, gnusw, gnuhw
: ${RPI_XC_TARGET:=raspbian32}

case $RPI_XC_TARGET in

    raspbian32)
        # Raspbian 32-bit
        BIN_PREFIX=arm-linux-gnueabihf
        BIN_DIR=gcc-linaro-$BIN_PREFIX-raspbian
        ;;

    raspbian64)
        # Raspbian 64-bit
        BIN_PREFIX=arm-linux-gnueabihf
        BIN_DIR=gcc-linaro-$BIN_PREFIX-raspbian-x64
        ;;

    gnusw)
        # Software-float GNU (not sure what this is really)
        BIN_PREFIX=arm-bcm2708-linux-gnueabi
        BIN_DIR=$BIN_PREFIX
        ;;

    gnuhw)
        # Hardware-float GNU (not sure what this is really)
        BIN_PREFIX=arm-bcm2708hardfp-linux-gnueabi
        BIN_DIR=$BIN_PREFIX
        ;;

    *)
        err Unknown RPI_XC_TARGET=$RPI_XC_TARGET \
            "\n"Possible values: raspbian32, raspbian64, gnusw, gnuhw
        ;;

esac

CROSS_COMPILE=/rpi/arm-bcm2708/$BIN_DIR/bin/$BIN_PREFIX-

# If we are not running via boot2docker
if [ -z $DOCKER_HOST ]; then
    USER_IDS="-e BUILDER_UID=$( id -u ) -e BUILDER_GID=$( id -g )"
fi

docker run -i -t --rm \
    -v $PWD:/build \
    -e ARCH=arm \
    -e CROSS_COMPILE=$CROSS_COMPILE \
    $USER_IDS \
    $RPI_XC_ARGS \
    $RPI_XC_IMAGE "$@"

################################################################################
#
#   This image is not intended to be run manually.
#
#   To install the rpi-xc helper, run the following commands:
#
#       docker run stephenthirlwall/rpi-xc > rpi-xc
#       chmod +x rpi-xc
#
#   You may then wish to move rpi-xc to somewhere in your path.
#
################################################################################
